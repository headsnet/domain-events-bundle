<?xml version="1.0" encoding="UTF-8" ?>

<!--
  ~ This file is part of the Symfony HeadsnetDomainEventsBundle.
  ~
  ~ (c) Headstrong Internet Services Ltd 2020
  ~
  ~ For the full copyright and license information, please view the LICENSE
  ~ file that was distributed with this source code.
  -->

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
        https://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="headsnet_domain_events.legacy_map" />
        <parameter key="headsnet_domain_events.table_name" />
    </parameters>

    <services>

        <!-- Clients can override this to change the default lock factory, or indeed
        just configure the default lock using the framework bundle configuration -->
        <service id="headsnet_domain_events.lock_factory_service" alias="lock.factory"/>

        <!-- Clients can override this to change the default domain event dispatcher -->
        <service id="headsnet_domain_events.domain_event_dispatcher_service"
                 class="Headsnet\DomainEventsBundle\EventSubscriber\NoEnvelopeDomainEventDispatcher"
                 public="false">
            <argument type="service" id="messenger.bus.event"/>
        </service>

        <service id="headsnet_domain_events.event_subscriber.publisher"
                 class="Headsnet\DomainEventsBundle\EventSubscriber\PublishDomainEventSubscriber"
                 public="false">
            <argument type="service" id="headsnet_domain_events.domain_event_dispatcher_service"/>
            <argument type="service" id="headsnet_domain_events.repository.event_store_doctrine"/>
            <argument type="service" id="serializer"/>
            <argument type="service" id="headsnet_domain_events.lock_factory_service"/>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="headsnet_domain_events.event_subscriber.table_name"
                 class="Headsnet\DomainEventsBundle\Doctrine\EventSubscriber\TableNameEventSubscriber"
                 public="false">
            <argument>%headsnet_domain_events.table_name%</argument>
            <tag name="doctrine.event_listener" event="loadClassMetadata" connection="default"/>
        </service>

        <service id="headsnet_domain_events.event_subscriber.persister"
                 class="Headsnet\DomainEventsBundle\Doctrine\EventSubscriber\PersistDomainEventSubscriber"
                 public="false">
            <argument type="service" id="headsnet_domain_events.repository.event_store_doctrine"/>
            <tag name="doctrine.event_listener" event="onFlush" connection="default" priority="10"/>
        </service>

        <service id="headsnet_domain_events.repository.event_store_doctrine"
                 class="Headsnet\DomainEventsBundle\Doctrine\DoctrineEventStore"
                 public="false">
            <argument type="service" id="doctrine.orm.default_entity_manager"/>
            <argument type="service" id="serializer"/>
            <argument type="service" id="event_dispatcher"/>
            <argument>%headsnet_domain_events.table_name%</argument>
        </service>

        <service id="Headsnet\DomainEventsBundle\Domain\Model\EventStore"
                 alias="headsnet_domain_events.repository.event_store_doctrine"
        />

        <service id="headsnet_domain_events.event_check_command"
                 class="Headsnet\DomainEventsBundle\Console\EventNameCheckCommand">
            <argument type="service" id="doctrine.orm.default_entity_manager"/>
            <argument>%headsnet_domain_events.legacy_map%</argument>
        </service>

    </services>

</container>
